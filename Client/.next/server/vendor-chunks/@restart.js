"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@restart";
exports.ids = ["vendor-chunks/@restart"];
exports.modules = {

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Button.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Button.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isTrivialHref = isTrivialHref;\nexports.useButtonProps = useButtonProps;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"disabled\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction isTrivialHref(href) {\n    return !href || href.trim() === \"#\";\n}\nfunction useButtonProps({ tagName, disabled, href, target, rel, role, onClick, tabIndex = 0, type }) {\n    if (!tagName) {\n        if (href != null || target != null || rel != null) {\n            tagName = \"a\";\n        } else {\n            tagName = \"button\";\n        }\n    }\n    const meta = {\n        tagName\n    };\n    if (tagName === \"button\") {\n        return [\n            {\n                type: type || \"button\",\n                disabled\n            },\n            meta\n        ];\n    }\n    const handleClick = (event)=>{\n        if (disabled || tagName === \"a\" && isTrivialHref(href)) {\n            event.preventDefault();\n        }\n        if (disabled) {\n            event.stopPropagation();\n            return;\n        }\n        onClick == null ? void 0 : onClick(event);\n    };\n    const handleKeyDown = (event)=>{\n        if (event.key === \" \") {\n            event.preventDefault();\n            handleClick(event);\n        }\n    };\n    if (tagName === \"a\") {\n        // Ensure there's a href so Enter can trigger anchor button.\n        href || (href = \"#\");\n        if (disabled) {\n            href = undefined;\n        }\n    }\n    return [\n        {\n            role: role != null ? role : \"button\",\n            // explicitly undefined so that it overrides the props disabled in a spread\n            // e.g. <Tag {...props} {...hookProps} />\n            disabled: undefined,\n            tabIndex: disabled ? undefined : tabIndex,\n            href,\n            target: tagName === \"a\" ? target : undefined,\n            \"aria-disabled\": !disabled ? undefined : disabled,\n            rel: tagName === \"a\" ? rel : undefined,\n            onClick: handleClick,\n            onKeyDown: handleKeyDown\n        },\n        meta\n    ];\n}\nconst Button = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { as: asProp, disabled } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [buttonProps, { tagName: Component }] = useButtonProps(Object.assign({\n        tagName: asProp,\n        disabled\n    }, props));\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, buttonProps, {\n        ref: ref\n    }));\n});\nButton.displayName = \"Button\";\nvar _default = Button;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Button.js\n");

/***/ })

};
;